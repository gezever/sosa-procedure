<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>be.vlaanderen.omgeving.data</groupId>
    <artifactId>sosa-procedure</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <description>Spark Scala and Java examples (i.e. parquet and jena inferencing)</description>
    <inceptionYear>2025</inceptionYear>

    <packaging>pom</packaging>

    <properties>
        <maven.compiler.source>1.17</maven.compiler.source>
        <maven.compiler.target>1.17</maven.compiler.target>
        <encoding>UTF-8</encoding>
        <scala.version>2.12.17</scala.version>
        <scala.compat.version>2.12</scala.compat.version>
        <spec2.version>4.2.0</spec2.version>
        <spark.version>3.5.0</spark.version>
        <jena.version>4.10.0</jena.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.jena</groupId>
                <artifactId>jena-shacl</artifactId>
                <version>4.10.0</version>
            </dependency>
            <!-- <dependency>
               <groupId>com.github.galigator.openllet</groupId>
               <artifactId>openllet-jena</artifactId>
               <version>2.6.5</version>
             </dependency>-->
            <!-- Apache Jena for RDF/Turtle processing -->
            <dependency>
                <groupId>org.apache.jena</groupId>
                <artifactId>apache-jena-libs</artifactId>
                <version>4.10.0</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <!-- Spark SQL -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <!-- Test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.compat.version}</artifactId>
                <version>3.0.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2-core_${scala.compat.version}</artifactId>
                <version>${spec2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2-junit_${scala.compat.version}</artifactId>
                <version>${spec2.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>java-examples</module>
        <module>scala-examples</module>
    </modules>

</project>
